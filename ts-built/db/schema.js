"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_1 = require("apollo-server");
//const { gql} = require('apollo-server');
var typeDefs = apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    type Usuario{\n        id: ID\n        nombre: String\n        apellido: String\n        email: String\n        creato: String\n    }\n    \n    type Token {\n        token: String\n    }\n\n    type Producto {\n        id: ID\n        nombre: String\n        existencia: Int\n        precio: Float\n        creado: String\n    }\n\n    input UsuarioInput {\n        nombre: String!\n        apellido: String!\n        email: String!\n        password: String!\n    }\n\n    input AutenticarInput {\n        email: String\n        password: String\n    }\n\n    input ProductoInput {\n        nombre: String!\n        existencia: Int!\n        precio: Float!\n    }\n\n    type Query {\n        obtenerUsuario(token: String!): Usuario\n    }\n\n    type Mutation {\n        # Usuarios\n        nuevoUsuario(input: UsuarioInput) : Usuario\n        autenticarUsuario(input: AutenticarInput) : Token\n\n        # Productos\n        nuevoProducto(input: ProductoInput) : Producto\n    }\n"], ["\n    type Usuario{\n        id: ID\n        nombre: String\n        apellido: String\n        email: String\n        creato: String\n    }\n    \n    type Token {\n        token: String\n    }\n\n    type Producto {\n        id: ID\n        nombre: String\n        existencia: Int\n        precio: Float\n        creado: String\n    }\n\n    input UsuarioInput {\n        nombre: String!\n        apellido: String!\n        email: String!\n        password: String!\n    }\n\n    input AutenticarInput {\n        email: String\n        password: String\n    }\n\n    input ProductoInput {\n        nombre: String!\n        existencia: Int!\n        precio: Float!\n    }\n\n    type Query {\n        obtenerUsuario(token: String!): Usuario\n    }\n\n    type Mutation {\n        # Usuarios\n        nuevoUsuario(input: UsuarioInput) : Usuario\n        autenticarUsuario(input: AutenticarInput) : Token\n\n        # Productos\n        nuevoProducto(input: ProductoInput) : Producto\n    }\n"])));
exports.default = typeDefs;
var templateObject_1;
//# sourceMappingURL=schema.js.map